<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
	xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">

	<define name="env">
		<optional>
			<attribute name="uid">
				<a:documentation>
					The ID of the user that creates this record, or performs this action.
				</a:documentation>
			</attribute>
		</optional>
		<optional>
			<attribute name="context">
				<a:documentation>
					A dictionary of key-value pairs that will be used to evaluate the expressions in this file.
				</a:documentation>
			</attribute>
		</optional>
	</define>

	<define name="views">
		<data type="string">
			<param name="pattern">([a-z]+(,[a-z]+)*)?</param>
		</data>
	</define>

	<define name="oe_class">
		<attribute name="class">
			<choice>
				<text/>
				<value>oe_inline</value>
				<value>oe_left</value>
				<value>oe_right</value>
				<value>oe_read_only</value>
				<value>oe_edit_only</value>
				<value>oe_avatar</value>
				<value>oe_stat_button</value>
				<value>oe_chatter</value>
				<value>o_attachment_preview</value>
				<value>oe_title</value>
			</choice>
			<a:documentation xml:space="preserve">
				HTML classes. Some helper classes starting with `oe_` provide
				useful styling for common use cases.<br/>
				- `oe_chatter`: Used with `&lt;div>` to define a chatter widget. 
					The model must also inherit the `mail.thread` mixin.<br/>
				- `o_attachment_preview`: Used with an empty `&lt;div>` to define a preview widget for attachments.<br/>
				- `oe_stat_button`: Used to style a "smart button" which displays a count of related records
					and opens a new action when clicked.
			</a:documentation>
		</attribute>
	</define>

	<define name="decoration">
		<choice>
			<attribute name="decoration-info" a:defaultValue="False">
				<a:documentation>
					Apply a blue decoration to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-warning" a:defaultValue="False">
				<a:documentation>
					Apply a yellow decoration to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-danger" a:defaultValue="False">
				<a:documentation>
					Apply a red decoration to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-muted" a:defaultValue="False">
				<a:documentation>
					Apply a muted decoration to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-primary" a:defaultValue="False">
				<a:documentation>
					Apply a prominent decoration to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-success" a:defaultValue="False">
				<a:documentation>
					Apply a green decoration to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-bf" a:defaultValue="False">
				<a:documentation>
					Apply **bold text** to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="decoration-it" a:defaultValue="False">
				<a:documentation>
					Apply *italic text* to matching records. Takes a Python expression.
				</a:documentation>
			</attribute>
		</choice>
	</define>

	<define name="tree_button">
		<element name="button">
			<a:documentation>
				A button that will be displayed in the view.
			</a:documentation>
			<ref name="tree_button_attrs"/>
		</element>
	</define>

	<define name="tree">
		<element name="tree">
			<a:documentation xml:space="preserve">
				Define a list view. <br/>
				See https://www.odoo.com/documentation/latest/developer/reference/user_interface/view_architectures.html#list
			</a:documentation>
			<zeroOrMore>
				<choice>
					<ref name="decoration"/>
					<ref name="view_attrs"/>
					<attribute name="import" a:defaultValue="True">
						<a:documentation>
							Disable/enable record deletion through the **Action** dropdown.
						</a:documentation>
					</attribute>
					<attribute name="export_xlsx" a:defaultValue="True">
						<a:documentation>
							Disable/enable record exporting on this view.
						</a:documentation>
					</attribute>
					<attribute name="editable">
						<choice>
							<value>top</value>
							<value>bottom</value>
						</choice>
						<a:documentation>
							Allow in-place record editing, and specifies whether new records
							are inserted at the top or bottom of the list.
						</a:documentation>
					</attribute>
					<attribute name="multi_edit">
						<value>1</value>
						<a:documentation>
							Allow updating multiple records' fields to the same value.
						</a:documentation>
					</attribute>
					<attribute name="open_form_view" a:defaultValue="False">
						<a:documentation>
							Display a button at each row's end to open the form view.
						</a:documentation>
					</attribute>
					<attribute name="default_group_by">
						<a:documentation>
							Default field to group by, if none is specified on the action or the search filters.
						</a:documentation>
					</attribute>
					<attribute name="default_order">
						<a:documentation>
							Comma-separated list of fields to order records, overriding the model's default `_order`.
							To sort a field in decreasing order, specify `$field desc`.
						</a:documentation>
					</attribute>
					<attribute name="limit" a:defaultValue="80">
						<data type="nonNegativeInteger"/>
						<a:documentation>
							The default size of a page.
						</a:documentation>
					</attribute>
					<attribute name="groups_limit" a:defaultValue="80">
						<data type="nonNegativeInteger"/>
						<a:documentation>
							The default number of groups.
						</a:documentation>
					</attribute>
					<attribute name="expand" a:defaultValue="False">
						<a:documentation>
							Whether to expand the first level of groups by default.
						</a:documentation>
					</attribute>
					<attribute name="sample" a:defaultValue="False">
						<a:documentation>
							Populate the view with sample data if it's empty.
						</a:documentation>
					</attribute>
					<ref name="tree_field"/>
					<ref name="tree_button"/>
					<element name="groupby">
						<a:documentation>
							Define a group-by header for `Many2one` fields.
						</a:documentation>
						<attribute name="name">
							<a:documentation>
								The name of a `Many2one` field by which to group records.
							</a:documentation>
						</attribute>
						<oneOrMore>
							<choice>
								<ref name="tree_field"/>
								<ref name="tree_button"/>
							</choice>
						</oneOrMore>
					</element>
					<element name="header">
						<a:documentation>
							A header displayed above the list view.
						</a:documentation>
						<oneOrMore>
							<element name="button">
								<a:documentation>
									A button inside the header. Accepts the same attributes as button columns.
								</a:documentation>
								<ref name="tree_button_attrs"/>
								<optional>
									<attribute name="display">
										<value>always</value>
										<a:documentation>
											Show this button even if no records are selected.
										</a:documentation>
									</attribute>
								</optional>
							</element>
						</oneOrMore>
					</element>
					<element name="control">
						<a:documentation xml:space="preserve">
							Create a "control row" that accepts different ways to create records
							a la Sales Order's "Add a section", "Add a note" etc.<br/>
							Overrides the default "Add a line" button if specified.
						</a:documentation>
						<oneOrMore>
							<choice>
								<element name="create">
									<a:documentation>
										A button to create a new record, with optional context.
									</a:documentation>
									<attribute name="string" a:defaultValue="Add a line">
										<a:documentation>
											The text of the button.
										</a:documentation>
									</attribute>
									<optional>
										<attribute name="context" a:defaultValue="{}">
											<a:documentation xml:space="preserve">
												Additional context to pass before creating a record.<br/>
												Useful for passing default values i.e. `{"default_field": ..}`
											</a:documentation>
										</attribute>
									</optional>
								</element>
								<element name="button">
									<a:documentation>
										A button inside the control row. Accepts the same attributes as button columns.
									</a:documentation>
									<ref name="tree_button_attrs"/>
								</element>
							</choice>
						</oneOrMore>
					</element>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="form">
		<element name="form">
			<a:documentation xml:space="preserve">
				Define a form view. <br/>
				See https://www.odoo.com/documentation/latest/developer/reference/user_interface/view_architectures.html#form
			</a:documentation>
			<oneOrMore>
				<choice>
					<ref name="view_attrs"/>
					<ref name="form_children"/>
					<attribute name="duplicate" a:defaultValue="True">
						<a:documentation>
							Allow duplicating records through the **Action** dropdown. Takes a Python expression.
						</a:documentation>
					</attribute>
					<attribute name="disable_autofocus" a:defaultValue="False">
						<a:documentation>
							Disable autofocus on the first field. Takes a Python expression.
						</a:documentation>
					</attribute>
				</choice>
			</oneOrMore>
		</element>
	</define>

	<define name="view_attrs">
		<choice>
			<attribute name="string">
				<a:documentation>
					The title of the list view, displayed if corresponding action has no name and target is `new`.
				</a:documentation>
			</attribute>
			<attribute name="create" a:defaultValue="True">
				<a:documentation>
					Disable/enable record creation on this view.
				</a:documentation>
			</attribute>
			<attribute name="edit" a:defaultValue="True">
				<a:documentation>
					Disable/enable record editing on this view.
				</a:documentation>
			</attribute>
			<attribute name="delete" a:defaultValue="True">
				<a:documentation>
					Disable/enable record deletion through the **Action** dropdown.
				</a:documentation>
			</attribute>
			<attribute name="js_class">
				<a:documentation>
					The name of the Javascript component class used instead of the form view.
					Corresponds to views registered using `registry.category("views").add("...")`.
				</a:documentation>
			</attribute>
			<attribute name="banner_route">
				<a:documentation>
					A route to fetch a banner HTML from. The corresponding handler must return a JSON
					response in the shape of `{"html": ".."}`
				</a:documentation>
			</attribute>
		</choice>
	</define>

	<define name="form_children">
		<choice>
			<text/>
			<ref name="form_field"/>
			<ref name="form_button"/>
			<ref name="sheet"/>
			<ref name="page"/>
			<ref name="group"/>
			<ref name="notebook"/>
			<element name="div">
				<zeroOrMore>
					<choice>
						<ref name="invisible"/>
						<ref name="groups"/>
						<ref name="oe_class"/>
						<attribute name="name">
							<choice>
								<text/>
								<value>button_box</value>
							</choice>
							<a:documentation xml:space="preserve">
								Names for semantic `&lt;div>` elements.<br/>
								- `button_box`: A row for smart buttons, usually at the top of the form.
							</a:documentation>
						</attribute>
						<attribute>
							<anyName/>
						</attribute>
						<ref name="form_children"/>
					</choice>
				</zeroOrMore>
			</element>
			<element name="span">
				<ref name="form_html"/>
			</element>
			<element name="p">
				<ref name="form_html"/>
			</element>
			<element name="header">
				<ref name="form_html"/>
			</element>
			<element>
				<anyName>
					<except>
						<name>field</name>
						<name>sheet</name>
						<name>page</name>
						<name>group</name>
						<name>notebook</name>
					</except>
				</anyName>
				<ref name="form_html"/>
			</element>
		</choice>
	</define>

	<define name="form_html">
		<zeroOrMore>
			<choice>
				<ref name="invisible"/>
				<ref name="groups"/>
				<ref name="oe_class"/>
				<attribute>
					<anyName/>
				</attribute>
				<ref name="form_children"/>
			</choice>
		</zeroOrMore>
	</define>

	<define name="sheet">
		<element name="sheet">
			<a:documentation>
				Provides a responsive layout for fields and markup, as a direct child of a
				`&lt;form>` element. Typically contains `group` elements.
			</a:documentation>
			<zeroOrMore>
				<ref name="form_children"/>
			</zeroOrMore>
		</element>
	</define>

	<define name="page">
		<element name="page">
			<a:documentation>
				A page in a `&lt;notebook>`. Visually represented as a folder tab.
			</a:documentation>
			<zeroOrMore>
				<choice>
					<ref name="form_children"/>
					<ref name="invisible"/>
					<attribute name="string">
						<a:documentation>
							The title of the page.
						</a:documentation>
					</attribute>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="group">
		<element name="group">
			<a:documentation>
				A grouping of field elements.
			</a:documentation>
			<zeroOrMore>
				<choice>
					<ref name="form_children"/>
					<ref name="invisible"/>
					<attribute name="string">
						<a:documentation>
							The title of the group.
						</a:documentation>
					</attribute>
					<attribute name="col" a:defaultValue="2">
						<data type="nonNegativeInteger"/>
						<a:documentation>
							The number of columns in this group.
						</a:documentation>
					</attribute>
					<attribute name="colspan" a:defaultValue="1">
						<data type="nonNegativeInteger"/>
						<a:documentation>
							How many columns should child elements take.
						</a:documentation>
					</attribute>
					<attribute>
						<anyName/>
					</attribute>
					<element name="newline">
						<a:documentation>
							Force subsequent groups to start on a new line.
						</a:documentation>
						<empty/>
					</element>
					<element name="separator">
						<optional>
							<attribute name="string">
								<a:documentation>
									The title of the separator.
								</a:documentation>
							</attribute>
						</optional>
						<a:documentation>
							Insert vertical spacing within groups.
						</a:documentation>
						<empty/>
					</element>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="notebook">
		<element name="notebook">
			<a:documentation>
				A notebook-like tabbed container for `&lt;page>`s.
			</a:documentation>
			<zeroOrMore>
				<ref name="form_children"/>
			</zeroOrMore>
		</element>
	</define>

	<define name="form_field">
		<element name="field">
			<a:documentation>
				A field displayed in the form view.
			</a:documentation>
			<attribute name="name">
				<a:documentation>
					The name of the field that will be displayed.
				</a:documentation>
			</attribute>
			<zeroOrMore>
				<choice>
					<ref name="view_field_attrs"/>
					<ref name="tree"/>
					<ref name="form"/>
					<attribute name="colspan" a:defaultValue="1">
						<data type="nonNegativeInteger"/>
						<a:documentation>
							The number of columns this field should span.
						</a:documentation>
					</attribute>
					<attribute name="placeholder">
						<a:documentation>
							The placeholder text for the field. Useful for hints to text fields.
						</a:documentation>
					</attribute>
					<attribute name="help">
						<a:documentation>
							A tooltip to display upon hovering.
						</a:documentation>
					</attribute>
					<attribute name="mode">
						<choice>
							<text/>
							<value>tree</value>
							<value>form</value>
							<value>kanban</value>
							<value>graph</value>
						</choice>
						<a:documentation>
							A comma-separated list of subview modes for a relational field.
						</a:documentation>
					</attribute>
					<attribute name="filename">
						<a:documentation>
							The name of a `Char` field that specifies a `Binary` field's file name.
						</a:documentation>
					</attribute>
					<attribute name="password" a:defaultValue="False">
						<a:documentation>
							Whether to mask this field's data.
						</a:documentation>
					</attribute>
					<attribute name="kanban_view_ref">
						<a:documentation>
							The external ID of a kanban view to display for this field.
						</a:documentation>
					</attribute>
					<attribute name="default_focus" a:defaultValue="False">
						<a:documentation>
							Whether this field should be focused when the form is opened.
							Only one field can have this attribute set to `True` per view (excluding subviews).
						</a:documentation>
					</attribute>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="form_button">
		<element name="button">
			<a:documentation>
				A button that will be displayed in the form view.
			</a:documentation>
			<choice>
				<ref name="view_button_attrs_required"/>
				<group>
					<optional>
						<ref name="view_button_attrs_required"/>
					</optional>
					<attribute name="special">
						<choice>
							<value>save</value>
							<value>cancel</value>
						</choice>
						<a:documentation>
							What clicking this button should do. `type` and `name` are ignored if this is specified.
						</a:documentation>
					</attribute>
				</group>
			</choice>
			<zeroOrMore>
				<choice>
					<ref name="view_button_attrs"/>
					<attribute name="confirm">
						<a:documentation>
							A confirmation message to display before executing the action.
						</a:documentation>
					</attribute>
					<attribute name="data-hotkey">
						<a:documentation>
							Assign a hotkey to this button. Can be a single character, or `shift+$KEY`.
						</a:documentation>
					</attribute>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="invisible">
		<attribute name="invisible" a:defaultValue="False">
			<a:documentation>
				Whether the element is invisible. Takes a Python expression.
			</a:documentation>
		</attribute>
	</define>

	<define name="groups">
		<attribute name="groups">
			<a:documentation>
				A comma-separated list of `res.groups` that are allowed to see this element.
				Prefix a group with `!` to negate it.
			</a:documentation>
		</attribute>
	</define>

	<define name="view_field_attrs">
		<!-- Common attributes on all view fields. -->
		<choice>
			<ref name="decoration"/>
			<ref name="oe_class"/>
			<ref name="invisible"/>
			<ref name="groups"/>
			<attribute name="string">
				<a:documentation>
					The title of the field that will be displayed.
				</a:documentation>
			</attribute>
			<attribute name="id">
				<a:documentation>
					Specify this when including the same field multiple times in a view.
				</a:documentation>
			</attribute>
			<attribute name="optional">
				<choice>
					<value>show</value>
					<value>hide</value>
				</choice>
				<a:documentation>
					Allows the field to be shown/hidden by the user, and whether to show it by default.
				</a:documentation>
			</attribute>
			<attribute name="readonly" a:defaultValue="False">
				<a:documentation>
					Whether the field is read-only. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="required" a:defaultValue="False">
				<a:documentation>
					Whether the field is required. Takes a Python expression.
				</a:documentation>
			</attribute>
			<attribute name="widget">
				<a:documentation xml:space="preserve">
					The widget used to display the field.<br/>
					See https://www.odoo.com/documentation/latest/developer/reference/frontend/javascript_reference.html#fields
					for a non-exhaustive listing of Javascript fields.
				</a:documentation>
			</attribute>
			<attribute name="options" a:defaultValue="{}">
				<a:documentation xml:space="preserve">
					A Python dictionary containing additional options for the widget.<br/><br/>
					On relational fields, these options are used to control creation/editing behavior:
					`no_create`, `no_quick_create`, `no_open`, `no_open_edit` and so on.<br/> <br/>
					See https://www.odoo.com/documentation/latest/developer/reference/frontend/javascript_reference.html#fields
					for a non-exhaustive listing of Javascript fields, and options that they accept.
				</a:documentation>
			</attribute>
			<attribute name="width">
				<a:documentation>
					THe CSS width of the column, when there are no records in the list.
				</a:documentation>
			</attribute>
			<attribute name="nolabel">
				<value>1</value>
				<a:documentation>
					Whether to hide the label of the field.
				</a:documentation>
			</attribute>
			<attribute name="domain" a:defaultValue="[]">
				<a:documentation>
					A
					[domain](https://www.odoo.com/documentation/latest/developer/reference/backend/orm.html#reference-orm-domains)
					to filter records assignable to this field.
				</a:documentation>
			</attribute>
			<attribute name="context" a:defaultValue="{}">
				<a:documentation>
					Additional context to pass when creating new records for this field, or when searching and editing. Takes a
					Python dictionary.
				</a:documentation>
			</attribute>
		</choice>
	</define>

	<define name="tree_button_attrs">
		<ref name="view_button_attrs_required"/>
		<zeroOrMore>
			<choice>
				<ref name="view_button_attrs"/>
				<attribute name="column_invisible" a:defaultValue="False">
					<a:documentation>
						Whether this button's column should be hidden. Takes a Python expression.
					</a:documentation>
				</attribute>
			</choice>
		</zeroOrMore>
	</define>

	<define name="view_button_attrs_required">
		<attribute name="type">
			<choice>
				<value>object</value>
				<value>action</value>
			</choice>
			<a:documentation xml:space="preserve">
				What should happen when the button is clicked.<br/>
				- `object`: Call a method on the view's model.<br/>
				- `action`: Execute an action.
			</a:documentation>
		</attribute>
		<attribute name="name">
			<a:documentation xml:space="preserve">
				What to invoke when the button is clicked.<br/>
				- When `type` is `object`, this is the method to call.<br/>
				- When `type` is `action`, this is the external ID of the action to execute.
					Either an integer ID or a string format `%(xmlid)d`.
			</a:documentation>
		</attribute>
	</define>

	<define name="view_button_attrs">
		<choice>
			<ref name="oe_class"/>
			<ref name="invisible"/>
			<ref name="groups"/>
			<attribute name="string">
				<a:documentation>
					The button's text, or alt-text if `icon` is specified.
				</a:documentation>
			</attribute>
			<attribute name="icon">
				<a:documentation xml:space="preserve">
					The icon to display on the button.<br/><br/>
					See https://www.odoo.com/documentation/latest/developer/reference/user_interface/icons.html#reference-user-interface-ui-icons
				</a:documentation>
			</attribute>
			<attribute name="help">
				<a:documentation>
					A tooltip to display upon hovering.
				</a:documentation>
			</attribute>
			<attribute name="context" a:defaultValue="{}">
				<a:documentation>
					Additional context to pass to the method or action.
					Accepts a Python dictionary.
				</a:documentation>
			</attribute>
		</choice>
	</define>

	<define name="tree_field">
		<element name="field">
			<a:documentation>
				A field that will be displayed in the list view.
			</a:documentation>
			<attribute name="name">
				<a:documentation>
					The name of the field that will be displayed.
				</a:documentation>
			</attribute>
			<zeroOrMore>
				<choice>
					<ref name="view_field_attrs"/>
					<attribute name="column_invisible" a:defaultValue="False">
						<a:documentation>
							Whether the entire column shoud be hidden. Takes a Python expression.
						</a:documentation>
					</attribute>
					<attribute name="sum">
						<a:documentation>
							Display a sum of this column, with the specified title.
						</a:documentation>
					</attribute>
					<attribute name="avg">
						<a:documentation>
							Display an average of this column, with the specified title.
						</a:documentation>
					</attribute>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="any">
		<choice>
			<ref name="tree"/>
			<ref name="tree_field"/>
			<element>
				<anyName>
					<except>
						<name>tree</name>
						<name>field</name>
					</except>
				</anyName>
				<zeroOrMore>
					<choice>
						<attribute>
							<anyName/>
						</attribute>
						<text/>
						<ref name="any"/>
					</choice>
				</zeroOrMore>
			</element>
		</choice>
	</define>

	<define name="arch_fragment">
		<choice>
			<ref name="tree"/>
			<ref name="form"/>
			<element name="xpath">
				<a:documentation>
					Matches a node in the inherited view using XPath.
				</a:documentation>
				<attribute name="expr">
					<a:documentation>
						The [XPath expression](https://developer.mozilla.org/en-US/docs/Web/XPath) to locate elements in
						the inherited view. Note that only the first match is used.
					</a:documentation>
				</attribute>
				<ref name="position"/>
			</element>
			<element>
				<anyName>
					<except>
						<name>tree</name>
						<name>form</name>
						<name>xpath</name>
					</except>
				</anyName>
				<zeroOrMore>
					<choice>
						<attribute>
							<anyName>
								<except>
									<name>position</name>
								</except>
							</anyName>
						</attribute>
					</choice>
				</zeroOrMore>
				<ref name="position"/>
			</element>
		</choice>
	</define>

	<define name="position">
		<choice>
			<group>
				<optional> <!-- TODO: remove this optional once all structures are done -->
					<attribute name="position">
						<a:documentation>
							Specify how to modify/insert elements with respect to this XPath node.
						</a:documentation>
						<choice>
							<value>before</value>
							<value>after</value>
							<value>replace</value>
							<value>inside</value>
						</choice>
					</attribute>
				</optional>
				<zeroOrMore>
					<ref name="form_children"/>
				</zeroOrMore>
			</group>
			<group>
				<attribute name="position">
					<value>attributes</value>
				</attribute>
				<oneOrMore>
					<element name="attribute">
						<a:documentation>
							Attributes to set on the parent node. Leave empty to remove the attribute.
						</a:documentation>
						<attribute name="name">
							<a:documentation>
								The name of the attribute to set.
							</a:documentation>
						</attribute>
						<zeroOrMore>
							<choice>
								<text/>
								<attribute name="add">
									<a:documentation>
										What to add to the attribute. The value is automatically preceded by `separator`.
									</a:documentation>
								</attribute>
								<attribute name="remove">
									<a:documentation>
										Which part to remove from the attribute, after splitting by `separator`.
									</a:documentation>
								</attribute>
								<attribute name="separator" a:defaultValue=",">
									<a:documentation>
										The separator to split the attribute by. `remove` will remove contiguous substrings of the
										attribute, as determined by this separator.
									</a:documentation>
								</attribute>
							</choice>
						</zeroOrMore>
					</element>
				</oneOrMore>
			</group>
		</choice>
	</define>

	<define name="value">
		<element name="value">
			<a:documentation>
				A value that will be used to set the value of a field in a record.
			</a:documentation>
			<optional>
				<attribute name="name">
					<a:documentation>
						The name of the field that this value will be set to.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="model">
					<a:documentation>
						The name of the model that this value will act on, e.g. `res.partner`.
					</a:documentation>
				</attribute>
			</optional>
			<choice>
				<attribute name="search">
					<a:documentation>
						A domain that will be used to search for the value.
					</a:documentation>
				</attribute>
				<attribute name="eval">
					<a:documentation>
						A Python expression that will be evaluated to produce the value.
					</a:documentation>
				</attribute>
				<group>
					<optional>
						<attribute name="type"/>
					</optional>
					<choice>
						<attribute name="file"/>
						<text/>
					</choice>
				</group>
			</choice>
			<optional>
				<attribute name="use">
					<a:documentation>
						If specified, extract this field from the result of the search.
					</a:documentation>
				</attribute>
			</optional>
		</element>
	</define>

	<define name="function">
		<element name="function">
			<a:documentation>
				A function that will be called when this XML file is imported into Odoo.
			</a:documentation>
			<attribute name="model">
				<a:documentation>
					The name of the model that this function will act on.
				</a:documentation>
			</attribute>
			<attribute name="name">
				<a:documentation>
					The name of the function that will be called.
				</a:documentation>
			</attribute>
			<ref name="env"/>
			<optional>
				<choice>
					<attribute name="eval">
						<a:documentation>
							A Python expression that will be evaluated to produce the value.
						</a:documentation>
					</attribute>
					<oneOrMore>
						<choice>
							<ref name="value"/>
							<ref name="function"/>
						</choice>
					</oneOrMore>
				</choice>
			</optional>
		</element>
	</define>

	<define name="report">
		<element name="report">
			<a:documentation>
				A report that will be available in the Odoo system.
			</a:documentation>
			<optional>
				<attribute name="id"/>
			</optional>
			<attribute name="string"/>
			<attribute name="model"/>
			<attribute name="name"/>
			<optional>
				<attribute name="print_report_name"/>
			</optional>
			<optional>
				<attribute name="report_type"/>
			</optional>
			<optional>
				<attribute name="multi"/>
			</optional>
			<optional>
				<attribute name="menu"/>
			</optional>
			<optional>
				<attribute name="keyword"/>
			</optional>
			<optional>
				<attribute name="file"/>
			</optional>
			<optional>
				<attribute name="xml"/>
			</optional>
			<optional>
				<attribute name="parser"/>
			</optional>
			<optional>
				<attribute name="auto"/>
			</optional>
			<optional>
				<attribute name="header"/>
			</optional>
			<optional>
				<attribute name="attachment"/>
			</optional>
			<optional>
				<attribute name="attachment_use">
					<a:documentation>
						The name of the field that will be used to attach the report to a record.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="groups">
					<a:documentation>
						A comma-separated list of `res.groups` that are allowed to see this report.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="paperformat"/>
			</optional>
			<!-- `Usage` may help identify the best report for a certain task,
								 for example usage="default" for reports that are attached by
								 default in EDI exports -->
			<optional>
				<attribute name="usage">
					<a:documentation>
						A short description of the purpose of the report.
					</a:documentation>
				</attribute>
			</optional>
			<empty/>
		</element>
	</define>

	<define name="field">
		<element name="field">
			<a:documentation>
				A field that will be set in a record.
			</a:documentation>
			<attribute name="name">
				<a:documentation>
					The name of the field that this value will be set to.
				</a:documentation>
			</attribute>
			<choice>
				<group>
					<attribute name="type">
						<a:documentation xml:space="preserve">
							The type of the field that this value will be set to.<br/>
							- For binary fields, either provide the path to `file=`
								or the contents to the body of the tag.<br/>
							- For numeric fields, provide the value directly in the body of the tag.<br/>
							- For `list` and `tuple` fields, provide one or more `&lt;value />` tags.<br/>
							- For `html` and `xml` fields, provide the contents directly in the body of the tag.
								Each tag must be a well-formed XML fragment, i.e. empty attributes must have a value,
								like `&lt;img contenteditable="" />`.
						</a:documentation>
						<choice>
							<value>base64</value>
							<value>char</value>
							<value>file</value>
						</choice>
					</attribute>
					<choice>
						<group>
							<attribute name="file">
								<a:documentation>
									The path to the file that will be attached to the field.
								</a:documentation>
							</attribute>
							<empty/>
						</group>
						<text/>
					</choice>
				</group>
				<group>
					<attribute name="type">
						<value>int</value>
					</attribute>
					<choice>
						<data type="int"/>
						<value>None</value>
					</choice>
				</group>
				<group>
					<attribute name="type">
						<value>float</value>
					</attribute>
					<data type="float"/>
				</group>
				<group>
					<attribute name="type">
						<choice>
							<value>list</value>
							<value>tuple</value>
						</choice>
					</attribute>
					<oneOrMore>
						<ref name="value"/>
					</oneOrMore>
				</group>
				<group>
					<attribute name="type">
						<value>xml</value>
					</attribute>
					<oneOrMore>
						<ref name="arch_fragment"/>
					</oneOrMore>
				</group>
				<group>
					<attribute name="type">
						<value>html</value>
					</attribute>
					<oneOrMore>
						<choice>
							<text/>
							<ref name="any"/>
						</choice>
					</oneOrMore>
				</group>
				<group>
					<attribute name="ref">
						<a:documentation>
							The external ID of the record that this field will be set to.
						</a:documentation>
					</attribute>
					<empty/>
				</group>
				<group>
					<attribute name="eval">
						<a:documentation>
							A Python expression that will be evaluated to produce the value.
							For relational fields, this should resolve to a list of IDs.
						</a:documentation>
					</attribute>
					<optional>
						<attribute name="model"/>
					</optional>
					<empty/>
				</group>
				<group>
					<attribute name="search"/>
					<optional>
						<attribute name="model"/>
						<optional>
							<attribute name="use"/>
						</optional>
					</optional>
					<empty/>
				</group>
				<text/>
				<zeroOrMore>
					<ref name="record"/>
				</zeroOrMore>
			</choice>
		</element>
	</define>


	<define name="record">
		<element name="record">
			<a:documentation>
				A record that will be created in the Odoo system.
			</a:documentation>
			<optional>
				<attribute name="id">
					<a:documentation>
						The external ID of this record. If not set, this record cannot be referenced via `ref()`.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="forcecreate">
					<a:documentation>
						If set to `True`, the record will be created even if it already exists in the database.
					</a:documentation>
				</attribute>
			</optional>
			<attribute name="model">
				<a:documentation>
					The name of the model that this record will act on, e.g. `res.partner`.
				</a:documentation>
			</attribute>
			<ref name="env"/>
			<zeroOrMore>
				<ref name="field"/>
			</zeroOrMore>
		</element>
	</define>

	<define name="template">
		<element name="template">
			<a:documentation xml:space="preserve">
				A template that will be used to render a report in the Odoo system.
				Internally, this is used to create a <code>ir.ui.view</code> record.
			</a:documentation>
			<optional>
				<attribute name="id">
					<a:documentation>
						The external ID of this template. If not set, this template cannot be referenced via `ref()`.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="t-name">
					<a:documentation>
						The name of the template that will be used to render the report.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="name">
					<a:documentation>
						The name of the template that will be used to render the report. Legacy syntax.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="forcecreate">
					<a:documentation>
						If set to "True", the template will be created even if it already exists in the database.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="context">
					<a:documentation>
						A dictionary of key-value pairs that will be used to render the template.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="priority">
					<a:documentation>
						The priority of the template. Higher priority templates will be used first.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="key"/>
			</optional>
			<optional>
				<attribute name="website_id">
					<a:documentation>
						The external ID of the website that this template will be used in.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="track">
					<a:documentation>
						If set to "True", the template will be tracked in the website's statistics.
					</a:documentation>
				</attribute>
			</optional>
			<group>
				<optional>
					<attribute name="inherit_id">
						<a:documentation>
							The external ID of the template to inherit from.
						</a:documentation>
					</attribute>
				</optional>
				<optional>
					<attribute name="primary">
						<value>True</value>
					</attribute>
				</optional>
				<optional>
					<attribute name="groups">
						<a:documentation xml:space="preserve">
							A comma-separated list of `res.groups` allowed to see this template.
						</a:documentation>
					</attribute>
				</optional>
				<optional>
					<attribute name="active"/>
				</optional>
				<optional>
					<attribute name="customize_show">
						<a:documentation>
							If set to "True", the template will be shown in the website's customization menu.
						</a:documentation>
					</attribute>
				</optional>
			</group>
			<zeroOrMore>
				<ref name="template_children"/>
			</zeroOrMore>
		</element>
	</define>

	<define name="template_children">
		<choice>
			<text/>
			<element name="t">
				<ref name="template_html"/>
			</element>
			<element name="div">
				<ref name="template_html"/>
			</element>
			<element name="span">
				<ref name="template_html"/>
			</element>
			<element name="p">
				<ref name="template_html"/>
			</element>
			<element name="table">
				<ref name="template_html"/>
			</element>
			<element name="thead">
				<ref name="template_html"/>
			</element>
			<element name="tbody">
				<ref name="template_html"/>
			</element>
			<element name="th">
				<ref name="template_html"/>
			</element>
			<element name="tr">
				<ref name="template_html"/>
			</element>
			<element name="td">
				<ref name="template_html"/>
			</element>
			<element name="strong">
				<ref name="template_html"/>
			</element>
			<element name="i">
				<ref name="template_html"/>
			</element>
			<element name="h1">
				<ref name="template_html"/>
			</element>
			<element name="h2">
				<ref name="template_html"/>
			</element>
			<element name="h3">
				<ref name="template_html"/>
			</element>
			<element name="h4">
				<ref name="template_html"/>
			</element>
			<element name="h5">
				<ref name="template_html"/>
			</element>
			<element name="h6">
				<ref name="template_html"/>
			</element>
			<element name="body">
				<ref name="template_html"/>
			</element>
			<element name="img">
				<ref name="template_html"/>
			</element>
			<element name="a">
				<ref name="template_html"/>
			</element>
			<element>
				<anyName/>
				<zeroOrMore>
					<choice>
						<attribute>
							<anyName/>
						</attribute>
						<ref name="template_children"/>
					</choice>
				</zeroOrMore>
			</element>
		</choice>
	</define>

	<define name="template_html">
		<zeroOrMore>
			<choice>
				<ref name="template_children"/>
				<attribute name="t-if" a:defaultValue="True">
					<a:documentation>
						An expression determining whether this element should be displayed.
					</a:documentation>
				</attribute>
				<attribute name="t-elif">
					<a:documentation>
						An expression determining whether this element should be displayed.
						Must be preceded by an element with `t-if`.
					</a:documentation>
				</attribute>
				<attribute name="t-else">
					<a:documentation>
						A fallback element that will be displayed if no preceding `t-if` or `t-elif` expressions are true.
					</a:documentation>
				</attribute>
				<attribute name="t-foreach">
					<a:documentation>
						An expression that will be evaluated to produce a list of values.
						Must be followed by `t-as`.
					</a:documentation>
				</attribute>
				<attribute name="t-as">
					<a:documentation>
						The name of the variable that will be used to reference each value in the list.
						Must be a variable; no other expressions are supported.
					</a:documentation>
				</attribute>
				<attribute name="t-set" a:defaultValue="oopo">
					<a:documentation>
						A variable name that will be set to the value of some expression, which
						must be specified by `t-value` within this element.
					</a:documentation>
				</attribute>
				<attribute name="t-value">
					<a:documentation>
						The expression that will be evaluated to produce the value that will be set to the variable.
					</a:documentation>
				</attribute>
				<attribute name="t-out">
					<a:documentation>
						An expression to stringify and include in the output.
						If displaying a relational field, consider using `t-field` instead.
					</a:documentation>
				</attribute>
				<attribute name="t-esc">
					<a:documentation>
						Old syntax for `t-out`. Use `t-out` instead.
					</a:documentation>
				</attribute>
				<attribute name="t-field">
					<a:documentation xml:space="preserve">
						A field to be displayed in the output.
						Options can be specified with `t-options-*`.<br/><br/>
						Not allowed on `&lt;t/>` elements.
					</a:documentation>
				</attribute>
				<attribute name="t-options" a:defaultValue="{}">
					<a:documentation>
						Options for a field-like element.
						Useful for specifying the `widget`, which can also be done alternatively with `t-options-widget`.
					</a:documentation>
				</attribute>
				<attribute name="t-options-widget">
					<a:documentation>
						Shorthand for specifying the `widget` option for the field specified by `t-field`.
					</a:documentation>
				</attribute>
				<attribute name="t-call">
					<a:documentation xml:space="preserve">
						A template name to render at this location.
						Accepts interpolation `foo_{{ value }}` similar to `t-attf-*`.<br/><br/>
						Template inputs should be provided within this element, using `t-set` and `t-value`.
					</a:documentation>
				</attribute>
				<attribute>
					<anyName/>
				</attribute>
			</choice>
		</zeroOrMore>
	</define>

	<define name="delete">
		<element name="delete">
			<a:documentation>
				A record that will be deleted from the Odoo system.
			</a:documentation>
			<attribute name="model"/>
			<choice>
				<attribute name="id"/>
				<attribute name="search"/>
			</choice>
		</element>
	</define>

	<define name="menuitem_attrs">
		<attribute name="id">
			<a:documentation>
				The external ID of this menu item. If not set, this menu item cannot be referenced via ref().
			</a:documentation>
		</attribute>
		<optional>
			<attribute name="name">
				<a:documentation>
					The display name of the menu item.
				</a:documentation>
			</attribute>
		</optional>
		<optional>
			<attribute name="sequence">
				<a:documentation>
					A hint to the order in which the menu items should be displayed.
				</a:documentation>
				<data type="int"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="groups">
				<a:documentation xml:space="preserve">
					A comma-separated list of `res.groups` allowed to see this menu item.
				</a:documentation>
			</attribute>
		</optional>
		<optional>
			<attribute name="active"/>
		</optional>
	</define>
	<define name="submenuitem_contents">
		<optional>
			<choice>
				<attribute name="action">
					<a:documentation xml:space="preserve">
						The external ID to an `ir.actions.actions` record to execute when the menu item is clicked.<br/>
						For menuitems, this is usually `ir.actions.act_window`.
					</a:documentation>
				</attribute>
				<oneOrMore>
					<ref name="submenuitem"/>
				</oneOrMore>
			</choice>
		</optional>
	</define>
	<define name="menuitem">
		<element name="menuitem">
			<a:documentation>
				A menu item that will be displayed in the Odoo system.
			</a:documentation>
			<ref name="menuitem_attrs"/>
			<choice>
				<!-- a root menu can have a web_icon, an action and children -->
				<group>
					<optional>
						<attribute name="web_icon"/>
					</optional>
					<optional>
						<attribute name="action">
							<a:documentation>
								The action to execute when the menu item is clicked.
							</a:documentation>
						</attribute>
					</optional>
					<zeroOrMore>
						<ref name="submenuitem"/>
					</zeroOrMore>
				</group>
				<!-- a non-root menu can have a parent and either an action or submenus -->
				<group>
					<attribute name="parent">
						<a:documentation>
							The name of the parent menu item.
						</a:documentation>
					</attribute>
					<ref name="submenuitem_contents"/>
				</group>
			</choice>
		</element>
	</define>
	<define name="submenuitem">
		<element name="menuitem">
			<a:documentation>
				A menu item that is a child of another menu item.
			</a:documentation>
			<ref name="menuitem_attrs"/>
			<ref name="submenuitem_contents"/>
		</element>
	</define>

	<define name="act_window">
		<element name="act_window">
			<a:documentation>
				An action that will be executed when this menu item is clicked.
			</a:documentation>
			<attribute name="id">
				<a:documentation>
					The external ID of this action. If not set, this action cannot be referenced via ref().
				</a:documentation>
			</attribute>
			<attribute name="name"/>
			<attribute name="res_model">
				<a:documentation>
					The name of the model that this action will act on.
				</a:documentation>
			</attribute>
			<optional>
				<attribute name="domain">
					<a:documentation>
						A domain that will be used to filter the records that this action will act on.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="context">
					<a:documentation>
						A dictionary of key-value pairs that will be used to evaluate the expressions in this file.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="view_id"/>
			</optional>
			<optional>
				<attribute name="view_mode"/>
			</optional>
			<optional>
				<attribute name="target">
					<a:documentation>
						The target window in which the view will be displayed.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="groups">
					<a:documentation xml:space="preserve">
						A comma-separated list of `res.groups` that are allowed to see this action.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="limit">
					<a:documentation>
						The maximum number of records that will be displayed in the view.
					</a:documentation>
				</attribute>
			</optional>
			<optional>
				<attribute name="usage"/>
			</optional>
			<optional>
				<attribute name="binding_model">
					<a:documentation>
						The name of the model that this action will be bound to.
					</a:documentation>
				</attribute>
				<optional>
					<attribute name="binding_type">
						<a:documentation>
							The type of binding that this action will be bound to.
						</a:documentation>
						<choice>
							<value>action</value>
							<value>report</value>
						</choice>
					</attribute>
				</optional>
				<optional>
					<attribute name="binding_views">
						<a:documentation>
							A comma-separated list of view names that this action will be bound to.
						</a:documentation>
						<ref name="views"/>
					</attribute>
				</optional>
			</optional>
			<empty/>
		</element>
	</define>

	<define name="odoo_openerp_data">
		<optional>
			<attribute name="noupdate">
				<a:documentation>
					If set to "1", the records in this file will not be updated
					if they already exist in the database.
				</a:documentation>
			</attribute>
		</optional>
		<optional>
			<attribute name="auto_sequence">
				<a:documentation>
					If set to "1", the records in this file will be assigned
					a sequence number automatically.
				</a:documentation>
			</attribute>
		</optional>
		<ref name="env"/>
		<zeroOrMore>
			<choice>
				<text/>
				<ref name="odoo"/>
				<ref name="openerp"/>
				<ref name="data"/>
				<ref name="menuitem"/>
				<ref name="record"/>
				<ref name="template"/>
				<ref name="delete"/>
				<ref name="act_window"/>
				<ref name="report"/>
				<ref name="function"/>
			</choice>
		</zeroOrMore>
	</define>

	<define name="odoo">
		<element name="odoo">
			<a:documentation>
				The root element of an XML file that can be imported into Odoo.
			</a:documentation>
			<ref name="odoo_openerp_data"/>
		</element>
	</define>

	<define name="data">
		<element name="data">
			<a:documentation>
				The root element of an XML file that can be imported into Odoo. Legacy syntax.
			</a:documentation>
			<ref name="odoo_openerp_data"/>
		</element>
	</define>

	<define name="openerp">
		<element name="openerp">
			<a:documentation>
				The root element of an XML file that can be imported into Odoo. Legacy syntax.
			</a:documentation>
			<ref name="odoo_openerp_data"/>
		</element>
	</define>

	<start>
		<choice>
			<ref name="odoo"/>
			<ref name="data"/>
			<ref name="openerp"/>
		</choice>
	</start>
</grammar>