name: test

on:
  push:
    branches: [main]
    paths:
      - '**/*.rs'
  pull_request:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-testing:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            coverage: yes
          - runs-on: macos-latest
            coverage: no
          - runs-on: windows-latest
            coverage: no
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Create dummy tag
        run: git tag -f CI

      # copied from  https://github.com/BamPeers/rust-ci-github-actions-workflow
      - name: Cache dependencies
        uses: actions/cache@v4
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest${{ matrix.coverage && ',cargo-llvm-cov' }}

      - name: Run unit tests
        id: cargo-test
        if: matrix.coverage == 'no'
        continue-on-error: true
        run: cargo nextest run --profile ci

      - name: Run unit tests (with coverage)
        id: cargo-testcov
        if: matrix.coverage == 'yes'
        continue-on-error: true
        run: |
          set -euxo pipefail
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov clean --workspace -v
          cargo nextest run --profile ci

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (${{ matrix.runs-on }})
          path: target/nextest/ci/junit.xml

      - name: Generate coverage report
        id: gencov
        if: steps.cargo-testcov.outcome == 'success'
        run: |
          set -euxo pipefail
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov report --lcov --output-path lcov.info
          cargo llvm-cov clean --workspace -v

      - name: Upload coverage report
        if: steps.gencov.outcome == 'success'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          fail_ci_if_error: true

      - name: Fail if unit tests failed
        if: steps.cargo-test.outcome == 'failure' || steps.cargo-testcov.outcome == 'failure'
        run: exit 1

  e2e-report-results:
    name: Report test results
    needs: e2e-testing
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: artifacts/**/junit.xml